{"ast":null,"code":"var _jsxFileName = \"/home/matt/projects/split nft game/src/components/header/index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable import/no-anonymous-default-export */\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { ethers } from \"ethers\"; // import style\n\nimport \"./style.scss\"; // import images\n\nimport Fox from \"../../assets/fox.svg\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3Modal from \"web3modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst INFURA_ID = \"\";\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: INFURA_ID\n    }\n  }\n};\nconst web3ModalMainnet = new Web3Modal({\n  network: \"mainnet\",\n  providerOptions\n});\n\nconst ConnectButton = ({\n  web3Modal,\n  onProviderSelected,\n  chainName\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn-metamask\",\n    onClick: async () => {\n      console.log(\"on click...\");\n\n      try {\n        const web3Provider = await web3Modal.connect();\n        console.log({\n          web3Provider\n        }); // Subscribe to accounts change\n\n        web3Provider.on(\"accountsChanged\", accounts => {\n          console.log({\n            accounts\n          });\n        }); // Subscribe to chainId change\n\n        web3Provider.on(\"chainChanged\", chainId => {\n          console.log({\n            chainId\n          });\n        }); // Subscribe to provider connection\n\n        web3Provider.on(\"connect\", info => {\n          console.log(\"connected..\", info);\n          console.log({\n            info\n          });\n        }); // Subscribe to provider disconnection\n\n        web3Provider.on(\"disconnect\", error => {\n          console.log({\n            error\n          });\n        });\n        onProviderSelected(web3Provider);\n      } catch (err) {\n        console.log(\"error while connecting wallet\", err);\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: Fox,\n      alt: \"metamask-img\",\n      className: \"img-fluid pr-5\",\n      width: \"25\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), \"Connect to \", chainName]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ConnectButton;\n\nconst Header = ({\n  currentAccount\n}) => {\n  _s();\n\n  const [provider, setProvider] = useState(null);\n  const [web3ModalProvider, setWeb3ModalProvider] = useState(null);\n  const [signer, setSigner] = useState(provider !== null ? provider.getSigner() : null);\n  useEffect(() => {\n    if (provider !== null) setSigner(provider.getSigner());\n    console.log({\n      provider\n    });\n  }, [provider]);\n  const [address, setAddress] = useState(\"\");\n  const [balance, setBalance] = useState(0);\n  useEffect(() => {\n    if (signer !== null) {\n      signer.getAddress().then(_address => setAddress(_address));\n    }\n\n    console.log({\n      signer\n    });\n  }, [signer]);\n  useEffect(() => {\n    if (provider !== null && address !== \"\") {\n      provider.getBalance(address).then(bal => setBalance(bal));\n    }\n  }, [address, provider]);\n  useEffect(() => {\n    if (web3ModalProvider !== null) {\n      setProvider(new ethers.providers.Web3Provider(web3ModalProvider));\n    }\n\n    console.log({\n      web3ModalProvider\n    });\n  }, [web3ModalProvider]); // Modal Hooks\n\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  async function sendEth(amount) {\n    //Get address\n    const account = await signer.getAddress();\n    const balance = await provider.getBalance(account);\n\n    if (Number(ethers.utils.formatUnits(balance, 18)) > amount) {\n      try {\n        await signer.sendTransaction({\n          to: currentAccount[0].toString(),\n          value: ethers.utils.parseEther(String(amount))\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      alert(\"Insufficient balance to do the transfer!\");\n    }\n  }\n\n  const logout = useCallback(async () => {\n    // await web3ModalBinance.clearCachedProvider();\n    await web3ModalMainnet.clearCachedProvider();\n    setWeb3ModalProvider(null);\n    setProvider(null);\n    setAddress(\"\");\n    setBalance(0);\n  }, [web3ModalMainnet]);\n  const onProviderSelected = useCallback(_provider => {\n    console.log(\"on provider selected\");\n    setWeb3ModalProvider(_provider);\n    handleShow();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [provider !== null ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Account Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Account:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Balance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: ethers.utils.formatEther(balance)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: provider !== null ? /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-metamask-disconnect\",\n            onClick: () => {\n              sendEth(0.001);\n            },\n            children: \"Send Eth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-metamask-disconnect\",\n            onClick: () => {\n              logout();\n            },\n            children: \"Disconnect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-metamask-disconnect\",\n            onClick: () => {\n              handleShow();\n            },\n            children: \"See Account Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(ConnectButton, {\n            chainName: \"Ethereum\",\n            web3Modal: web3ModalMainnet,\n            onProviderSelected: onProviderSelected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"/r18Ojarx+nHMNR7hNVeKl+O384=\");\n\n_c2 = Header;\nexport default Header;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ConnectButton\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"sources":["/home/matt/projects/split nft game/src/components/header/index.js"],"names":["React","Fragment","useState","useEffect","useCallback","Modal","ethers","WalletConnectProvider","Web3Modal","INFURA_ID","providerOptions","walletconnect","package","options","infuraId","web3ModalMainnet","network","ConnectButton","web3Modal","onProviderSelected","chainName","console","log","web3Provider","connect","on","accounts","chainId","info","error","err","Fox","Header","currentAccount","provider","setProvider","web3ModalProvider","setWeb3ModalProvider","signer","setSigner","getSigner","address","setAddress","balance","setBalance","getAddress","then","_address","getBalance","bal","providers","Web3Provider","show","setShow","handleClose","handleShow","sendEth","amount","account","Number","utils","formatUnits","sendTransaction","to","toString","value","parseEther","String","alert","logout","clearCachedProvider","_provider","formatEther"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { ethers } from \"ethers\";\n\n// import style\nimport \"./style.scss\";\n\n// import images\nimport Fox from \"../../assets/fox.svg\";\n\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3Modal from \"web3modal\";\n\nconst INFURA_ID = \"\";\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: INFURA_ID,\n    },\n  },\n};\n\nconst web3ModalMainnet = new Web3Modal({\n  network: \"mainnet\",\n  providerOptions,\n});\n\nconst ConnectButton = ({ web3Modal, onProviderSelected, chainName }) => {\n  return (\n    <button\n      className=\"btn-metamask\"\n      onClick={async () => {\n        console.log(\"on click...\");\n        try {\n          const web3Provider = await web3Modal.connect();\n          console.log({ web3Provider });\n          // Subscribe to accounts change\n          web3Provider.on(\"accountsChanged\", (accounts) => {\n            console.log({ accounts });\n          });\n\n          // Subscribe to chainId change\n          web3Provider.on(\"chainChanged\", (chainId) => {\n            console.log({ chainId });\n          });\n\n          // Subscribe to provider connection\n          web3Provider.on(\"connect\", (info) => {\n            console.log(\"connected..\", info);\n            console.log({ info });\n          });\n\n          // Subscribe to provider disconnection\n          web3Provider.on(\"disconnect\", (error) => {\n            console.log({ error });\n          });\n\n          onProviderSelected(web3Provider);\n        } catch (err) {\n          console.log(\"error while connecting wallet\", err);\n        }\n      }}\n    >\n      <img src={Fox} alt=\"metamask-img\" className=\"img-fluid pr-5\" width=\"25\" />\n      Connect to {chainName}\n    </button>\n  );\n};\n\nconst Header = ({ currentAccount }) => {\n  const [provider, setProvider] = useState(null);\n  const [web3ModalProvider, setWeb3ModalProvider] = useState(null);\n  const [signer, setSigner] = useState(\n    provider !== null ? provider.getSigner() : null\n  );\n\n  useEffect(() => {\n    if (provider !== null) setSigner(provider.getSigner());\n    console.log({ provider });\n  }, [provider]);\n\n  const [address, setAddress] = useState(\"\");\n  const [balance, setBalance] = useState(0);\n\n  useEffect(() => {\n    if (signer !== null) {\n      signer.getAddress().then((_address) => setAddress(_address));\n    }\n    console.log({ signer });\n  }, [signer]);\n\n  useEffect(() => {\n    if (provider !== null && address !== \"\") {\n      provider.getBalance(address).then((bal) => setBalance(bal));\n    }\n  }, [address, provider]);\n\n  useEffect(() => {\n    if (web3ModalProvider !== null) {\n      setProvider(new ethers.providers.Web3Provider(web3ModalProvider));\n    }\n    console.log({ web3ModalProvider });\n  }, [web3ModalProvider]);\n\n  // Modal Hooks\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  async function sendEth(amount) {\n    //Get address\n\n    const account = await signer.getAddress();\n    const balance = await provider.getBalance(account);\n\n    if (Number(ethers.utils.formatUnits(balance, 18)) > amount) {\n      try {\n        await signer.sendTransaction({\n          to: currentAccount[0].toString(),\n          value: ethers.utils.parseEther(String(amount)),\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      alert(\"Insufficient balance to do the transfer!\");\n    }\n  }\n\n  const logout = useCallback(async () => {\n    // await web3ModalBinance.clearCachedProvider();\n    await web3ModalMainnet.clearCachedProvider();\n    setWeb3ModalProvider(null);\n    setProvider(null);\n    setAddress(\"\");\n    setBalance(0);\n  }, [web3ModalMainnet]);\n\n  const onProviderSelected = useCallback((_provider) => {\n    console.log(\"on provider selected\");\n    setWeb3ModalProvider(_provider);\n    handleShow();\n  }, []);\n\n  return (\n    <Fragment>\n      {provider !== null ? (\n        <Fragment>\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Account Details</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div>\n                <h4>Account:</h4>\n                <p>{address}</p>\n              </div>\n              <div>\n                <h4>Balance:</h4>\n                <p>{ethers.utils.formatEther(balance)}</p>\n              </div>\n            </Modal.Body>\n          </Modal>\n        </Fragment>\n      ) : (\n        \"\"\n      )}\n      <div className=\"container\">\n        <div className=\"header-container\">\n          {provider !== null ? (\n            <Fragment>\n              <button\n                className=\"btn-metamask-disconnect\"\n                onClick={() => {\n                  sendEth(0.001);\n                }}\n              >\n                Send Eth\n              </button>\n              <button\n                className=\"btn-metamask-disconnect\"\n                onClick={() => {\n                  logout();\n                }}\n              >\n                Disconnect\n              </button>\n              <button\n                className=\"btn-metamask-disconnect\"\n                onClick={() => {\n                  handleShow();\n                }}\n              >\n                See Account Details\n              </button>\n            </Fragment>\n          ) : (\n            <>\n              <ConnectButton\n                chainName=\"Ethereum\"\n                web3Modal={web3ModalMainnet}\n                onProviderSelected={onProviderSelected}\n              />\n            </>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}