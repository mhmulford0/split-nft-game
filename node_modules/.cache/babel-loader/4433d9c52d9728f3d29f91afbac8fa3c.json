{"ast":null,"code":"var _jsxFileName = \"/home/matt/projects/split nft game/src/components/ReadDBase/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport NewCard from '../NewCard';\nimport Form from '../Form'; //<ArticleList articles = {articles} editArticle = {editArticle}/>\n//{editedArticle ? <Form article = {editedArticle} updatedData = {updatedData} insertedArticle = {insertedArticle}/> : null}\n// import style\n\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReadDBase() {\n  _s();\n\n  const [articles, setArticles] = useState([]);\n  const [editedArticle, setEditedArticle] = useState(null);\n  useEffect(() => {\n    fetch('https://5455536.defiartgame.com:5000/get', {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()) //.then(resp => console.log(resp))\n    .then(resp => setArticles(resp)).catch(error => console.log(error));\n  }, []);\n\n  const editArticle = article => {\n    //console.log(\"Hello World\")\n    setEditedArticle(article);\n  };\n\n  const updatedData = article => {\n    const new_article = articles.map(my_article => {\n      if (my_article.id === article.id) {\n        return article;\n      } else {\n        return my_article;\n      }\n    });\n    setArticles(new_article);\n  };\n\n  const openForm = () => {\n    setEditedArticle({\n      title: '',\n      body: ''\n    });\n  };\n\n  const insertedArticle = article => {\n    const new_articles = [...articles, article];\n    setArticles(new_articles);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadDBase\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: openForm,\n        children: \"Park NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewCard, {\n      articles: articles,\n      editArticle: editArticle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), editedArticle ? /*#__PURE__*/_jsxDEV(Form, {\n      article: editedArticle,\n      updatedData: updatedData,\n      insertedArticle: insertedArticle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 26\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ReadDBase, \"PCGvcxrzTzsdGvH1Q+eIloK4ZY0=\");\n\n_c = ReadDBase;\nexport default ReadDBase;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadDBase\");","map":{"version":3,"sources":["/home/matt/projects/split nft game/src/components/ReadDBase/index.js"],"names":["React","useState","useEffect","NewCard","Form","ReadDBase","articles","setArticles","editedArticle","setEditedArticle","fetch","headers","then","resp","json","catch","error","console","log","editArticle","article","updatedData","new_article","map","my_article","id","openForm","title","body","insertedArticle","new_articles","display","justifyContent","alignItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,IAAP,MAAiB,SAAjB,C,CAEA;AAEA;AAGA;;AACA,OAAO,cAAP;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,IAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,0CAAD,EAA6C;AAChD,gBAAS,KADuC;AAEhDC,MAAAA,OAAO,EAAE;AACP,wBAAe;AADR;AAFuC,KAA7C,CAAL,CAMCC,IAND,CAMMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EANd,EAOA;AAPA,KAQCF,IARD,CAQMC,IAAI,IAAIN,WAAW,CAACM,IAAD,CARzB,EASCE,KATD,CASOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAThB;AAWD,GAZQ,EAYP,EAZO,CAAT;;AAcA,QAAMG,WAAW,GAAIC,OAAD,IAAa;AAC/B;AACAX,IAAAA,gBAAgB,CAACW,OAAD,CAAhB;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAID,OAAD,IAAa;AAC/B,UAAME,WAAW,GAAGhB,QAAQ,CAACiB,GAAT,CAAaC,UAAU,IAAI;AAC7C,UAAGA,UAAU,CAACC,EAAX,KAAkBL,OAAO,CAACK,EAA7B,EAAiC;AAC/B,eAAOL,OAAP;AACD,OAFD,MAEO;AACL,eAAOI,UAAP;AACD;AACF,KANmB,CAApB;AAOAjB,IAAAA,WAAW,CAACe,WAAD,CAAX;AACD,GATD;;AAWA,QAAMI,QAAQ,GAAE,MAAM;AACpBjB,IAAAA,gBAAgB,CAAC;AAACkB,MAAAA,KAAK,EAAC,EAAP;AAAWC,MAAAA,IAAI,EAAC;AAAhB,KAAD,CAAhB;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAIT,OAAD,IAAa;AACnC,UAAMU,YAAY,GAAG,CAAC,GAAGxB,QAAJ,EAAcc,OAAd,CAArB;AACAb,IAAAA,WAAW,CAACuB,YAAD,CAAX;AAED,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAG,KAAjB;AACA,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,cAAc,EAAE,QAFX;AAGLC,QAAAA,UAAU,EAAE;AAHP,OADP;AAAA,6BAOE;AACA,QAAA,SAAS,EAAG,iBADZ;AAEA,QAAA,OAAO,EAAIP,QAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YAFF,eAoBE,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAIpB,QAArB;AAA+B,MAAA,WAAW,EAAIa;AAA9C;AAAA;AAAA;AAAA;AAAA,YApBF,EAsBGX,aAAa,gBAAG,QAAC,IAAD;AAAM,MAAA,OAAO,EAAIA,aAAjB;AAAgC,MAAA,WAAW,EAAIa,WAA/C;AAA4D,MAAA,eAAe,EAAIQ;AAA/E;AAAA;AAAA;AAAA;AAAA,YAAH,GAAuG,IAtBvH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BH;;GAvEQxB,S;;KAAAA,S;AAyET,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport NewCard from '../NewCard';\nimport Form from '../Form';\n\n//<ArticleList articles = {articles} editArticle = {editArticle}/>\n\n//{editedArticle ? <Form article = {editedArticle} updatedData = {updatedData} insertedArticle = {insertedArticle}/> : null}\n\n\n// import style\nimport \"./style.scss\";\n \nfunction ReadDBase() {\n    const [articles, setArticles] = useState([])\n    const [editedArticle, setEditedArticle] = useState(null)\n  \n    useEffect(() => {\n      fetch('https://5455536.defiartgame.com:5000/get', {\n        'method':'GET',\n        headers: {\n          'Content-Type':'application/json'\n        }\n      })\n      .then(resp => resp.json())\n      //.then(resp => console.log(resp))\n      .then(resp => setArticles(resp))\n      .catch(error => console.log(error))\n  \n    },[])\n\n    const editArticle = (article) => {\n      //console.log(\"Hello World\")\n      setEditedArticle(article)\n    }\n\n    const updatedData = (article) => {\n      const new_article = articles.map(my_article => {\n        if(my_article.id === article.id) {\n          return article\n        } else {\n          return my_article\n        }\n      })\n      setArticles(new_article)\n    }\n\n    const openForm =() => {\n      setEditedArticle({title:'', body:''})\n    }\n\n    const insertedArticle = (article) => {\n      const new_articles = [...articles, article]\n      setArticles(new_articles)\n\n    }\n\n    return (\n      <div className=\"ReadDBase\">\n\n        <div className = \"col\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}>\n\n          <button\n          className = \"btn btn-success\"\n          onClick = {openForm}\n          >Park NFT</button>\n        \n\n        </div>\n\n    \n\n    \n        <NewCard articles = {articles} editArticle = {editArticle}/>\n\n        {editedArticle ? <Form article = {editedArticle} updatedData = {updatedData} insertedArticle = {insertedArticle}/> : null}\n      \n    </div>\n   );\n}\n\nexport default ReadDBase"]},"metadata":{},"sourceType":"module"}